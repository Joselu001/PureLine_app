trigger: none

pr:
  branches:
    include:
      - "*"  # Se activa para cualquier PR

pool:
  name: 'Default'  # Asegúrate de que este pool esté configurado y el agente esté en línea

stages:
  - stage: BackendBuildTest
    displayName: "Construir y testear el Backend"
    jobs:
      - job: BuildBackend
        displayName: "Construir y testear el backend (Java)"
        steps:
          # Paso para clonar el repositorio
          - checkout: self
          
          # Cambiar al directorio correcto y ejecutar mvnw.cmd
          - script: |
              cd Pure-Line-main\backend\users-microservices
              dir
              call mvnw.cmd clean install -B
            displayName: "Ejecutar mvnw.cmd clean install"
          
          # Publicar los resultados de los tests unitarios (ajusta la ruta según tu configuración)
          - task: PublishTestResults@2
            inputs:
              testResultsFiles: '**\surefire-reports\TEST-*.xml'
              mergeTestResults: true
              testRunTitle: "Resultados de pruebas del Backend"
            displayName: "Publicar resultados de tests del backend"

  - stage: FrontendBuildTest
    displayName: "Construir y testear el Frontend"
    jobs:
      - job: BuildFrontend
        displayName: "Construir y testear el frontend (Angular)"
        steps:
          - checkout: self
          # Instalar Node.js (se utiliza la versión 14.x en este ejemplo)
          - task: NodeTool@0
            inputs:
              versionSpec: '14.x'
            displayName: "Instalar Node.js"
          
          # Instalar dependencias y Angular CLI
          - script: |
              cd Pure-Line-main\frontend
              npm install -g @angular/cli
              npm install
            displayName: "Instalar dependencias del frontend"
          
          # Ejecutar linting en Angular
          - script: |
              cd Pure-Line-main\frontend
              ng lint
            displayName: "Ejecutar linting en Angular"
          
          # Construir la aplicación Angular
          - script: |
              cd Pure-Line-main\frontend
              ng build --prod
            displayName: "Construir la aplicación Angular"
          
          # Ejecutar tests unitarios con cobertura
          - script: |
              cd Pure-Line-main\frontend
              ng test --watch=false --browsers=ChromeHeadless --code-coverage
            displayName: "Ejecutar tests unitarios de Angular"
          
          # Publicar resultados de cobertura (ajusta la ruta según tu configuración)
          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: 'Cobertura'
              summaryFileLocation: '$(Build.SourcesDirectory)\Pure-Line-main\frontend\coverage\cobertura-coverage.xml'
            displayName: "Publicar resultados de cobertura de código"
